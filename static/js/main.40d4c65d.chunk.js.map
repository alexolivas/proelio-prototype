{"version":3,"sources":["common/GraphWidget.jsx","common/PercentageCard.jsx","dashboard/Dashboard.jsx","employees/EmployeeDirectory.jsx","employees/EmployeeDetails.jsx","common/Header.jsx","common/ProelioPage.jsx","App.js","serviceWorker.js","index.js"],"names":["GraphWidget","props","state","score","color","this","data","options","chartType","title","titleNumber","icon","subTitle","Card","className","CardHeader","CardTitle","tag","Row","Col","md","Badge","style","fontSize","background","getGraphColor","toFixed","CardBody","renderHorizontalBarChart","React","Component","PercentageCard","percentage","Dashboard","department","gender","ageRange","experienceIndicators","topAtRiskEmployees","filter","employeeList","o","belongingScore","purposeScore","achievementScore","happinessScore","vigorScore","employeeExperienceList","totalEmployees","length","map","employee","averageExperienceScore","labels","datasets","backgroundColor","e","key","value","target","window","console","log","filteredEmployees","ageLimit","age","setState","createEmployeeExperienceData","legend","display","scales","xAxes","ticks","fontColor","suggestedMin","suggestedMax","yAxes","lg","borderColor","body","FormGroup","Label","Input","type","onChange","handleSelectOnChange","paddingTop","Table","responsive","experienceScore","_id","firstName","lastName","to","guid","EmployeeDirectory","allEmployees","Form","for","name","id","buildSearchForm","EmployeeDetails","match","params","find","activeTab","employeeAnalysis","factorDefs","experienceIndicatorDetails","factors","description","indicator","index","details","updatedFactors","currScore","factor","random","Math","floor","push","tab","Alert","Nav","tabs","NavItem","NavLink","classnames","active","onClick","toggleTab","TabContent","TabPane","tabId","padding","paddingRight","analysisIcon","analysisColor","analysisMessage","discretionaryColor","retentionColor","discretionaryIcon","retentionIcon","src","picture","alt","lineHeight","marginBottom","fontWeight","position","buildTabs","CardFooter","withRouter","Header","navbar","UncontrolledDropdown","nav","DropdownToggle","caret","data-toggle","DropdownMenu","right","DropdownItem","preventDefault","divider","PureComponent","ProelioPage","activeColor","sidebarLogo","innerLink","text","imgSrc","logoType","routes","renderNavbar","children","App","sideNavRoutes","path","component","layout","hiddenRoutes","route","exact","getRoutes","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"uktBAsGeA,E,kDAtFd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,GAFK,E,0DAOLC,GACb,IAAIC,EAAQ,UAMZ,OALKD,EAAQ,IAAMA,EAAQ,GAC1BC,EAAQ,UACGD,GAAS,KACpBC,EAAQ,WAEFA,I,iDAGoB,IAAD,EACWC,KAAKJ,MAAlCK,EADkB,EAClBA,KAAMC,EADY,EACZA,QACd,MAAmB,SAFO,EACHC,UAGrB,kBAAC,IAAD,CACCF,KAAOA,EACPC,QAAUA,IAKZ,kBAAC,IAAD,CACCD,KAAOA,EACPC,QAAUA,M,+BAKH,IAAD,EASJF,KAAKJ,MAJRQ,GALO,EAEPD,UAFO,EAGPF,KAHO,EAIPC,QAJO,EAKPE,OACAC,EANO,EAMPA,YAEAC,GARO,EAOPC,SAPO,EAQPD,MAED,OACC,kBAACE,EAAA,EAAD,CAAMC,UAAU,cACf,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAWC,IAAI,MACd,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,uBAAGL,UAAYH,IAAU,IACvBF,GAEDC,GACD,kBAACS,EAAA,EAAD,CAAKC,GAAK,EAAIN,UAAU,cACvB,kBAACO,EAAA,EAAD,CAAOjB,MAAM,SACZkB,MAAO,CACNC,SAAU,OACVC,WAAYnB,KAAKoB,cAAcf,GAC/BN,MAAO,YAENM,EAAYgB,QAAQ,GANvB,SAaL,kBAACC,EAAA,EAAD,KAEC,6BACGtB,KAAKuB,kC,GA1EaC,IAAMC,WCqBjBC,G,8KA1BJ,IAAD,EAC6B1B,KAAKJ,MAAlCQ,EADA,EACAA,MAAOL,EADP,EACOA,MAAO4B,EADd,EACcA,WACtB,OACC,kBAACnB,EAAA,EAAD,CAAMC,UAAU,cACf,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAWC,IAAI,MACZR,IAGJ,kBAACkB,EAAA,EAAD,CAAUb,UAAU,eACnB,yBAAKA,UAAU,mBACd,0BACCQ,MAAO,CACNC,SAAU,OACVnB,MAAM,GAAD,OAAMA,KAGV4B,EANH,Y,GAZuBH,IAAMC,Y,QCqbpBG,E,kDAtad,WAAYhC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZgC,WAAY,MACZC,OAAQ,MACRC,SAAU,MACVC,qBAAsB,CACrB,YACA,UACA,cACA,YACA,SAEDC,mBAAoBC,iBAAOC,GAAc,SAACC,GAIzC,OAH0BA,EAAEC,eAAiBD,EAAEE,aAC5CF,EAAEG,iBAAmBH,EAAEI,eACvBJ,EAAEK,YAAc,EACM,MAE1BC,uBAAwBP,GAnBP,E,0DAuBLrC,GACb,IAAIC,EAAQ,UAMZ,OALKD,EAAQ,IAAMA,EAAQ,GAC1BC,EAAQ,UACGD,GAAS,KACpBC,EAAQ,WAEFA,I,qDAGwB,IAAD,EAO1BC,KAAKH,MAFR6C,EAL6B,EAK7BA,uBACAV,EAN6B,EAM7BA,qBAYKW,EAAiBD,EAAuBE,OAC1CP,EAAiB,EACjBC,EAAe,EACfC,EAAmB,EACnBC,EAAiB,EACjBC,EAAa,EACjBC,EAAuBG,KAAI,SAACC,GAC3BT,GAAkBS,EAAST,eAC3BC,GAAgBQ,EAASR,aACzBC,GAAoBO,EAASP,iBAC7BC,GAAkBM,EAASN,eAC3BC,GAAcK,EAASL,cAWxB,IAAMM,IAPNV,GAAmCM,IACnCL,GAA+BK,IAC/BJ,GAAuCI,IACvCH,GAAmCG,IACnCF,GAA2BE,IAI0B,EA6BrD,MAAO,CAAE1C,KA3BI,CACZ+C,OAAQhB,EACRiB,SAAU,CACP,CAGDC,gBAAiB,CAChBlD,KAAKoB,cAAciB,GACnBrC,KAAKoB,cAAckB,GACnBtC,KAAKoB,cAAcmB,GACnBvC,KAAKoB,cAAcoB,GACnBxC,KAAKoB,cAAcqB,IAMpBxC,KAAM,CACLoC,EACAC,EACAC,EACAC,EACAC,MAKWM,4B,2CAGKI,EAAGC,GAAM,IAAD,IAMxBpD,KAAKH,MACDwD,GAPoB,EAE3BxB,WAF2B,EAG3BC,OAH2B,EAI3BC,SAJ2B,EAK3BW,uBAEiBS,EAAEG,OAAZD,OACRE,OAAOC,QAAQC,IAAIJ,EAAOD,GAC1B,IAAMM,EAAoBxB,iBAAOC,GAAc,SAACW,GAC/C,GAAe,QAAVO,EACJ,OAAO,EAGR,GAAa,aAARD,EAAqB,CACzBG,OAAOC,QAAQC,IAAIJ,GACnB,IAAIM,EAAW,GASf,MARe,MAAVN,EACJM,EAAW,GACU,MAAVN,EACXM,EAAW,GACU,MAAVN,IACXM,EAAW,IAGLb,EAASc,KAAOD,EAGxB,OAAOb,EAASM,KAASC,KAI1BrD,KAAK6D,UAAL,mBACET,EAAMC,GADR,uCAEyBK,GAFzB,M,+BAMS,IAAD,SAMJ1D,KAAKH,MAJRgC,EAFO,EAEPA,WACAC,EAHO,EAGPA,OACAC,EAJO,EAIPA,SACAE,EALO,EAKPA,mBALO,EAQiCjC,KAAK8D,+BAAtC7D,EARA,EAQAA,KAAM8C,EARN,EAQMA,uBAmCR7C,EAAU,CAMf6D,OAAQ,CACPC,SAAS,GAKVC,OAAQ,CACPC,MAAO,CACN,CACCF,SAAS,EACTG,MAAO,CACNC,UAAW,QACXC,aAAc,EACdC,aAAc,OAIjBC,MAAO,CACN,CACCJ,MAAO,CACNC,UAAW,aAMhB,OACC,oCACC,kBAACvD,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAK0D,GAAG,KACP,kBAAC,EAAD,CACCpE,MAAM,iBACNuB,WAAW,KACX5B,MAAM,aAsBR,kBAACe,EAAA,EAAD,CAAK0D,GAAG,KAGP,kBAAC,EAAD,CACCpE,MAAM,+BACND,UAAU,OACVD,QAAUA,EACVD,KAtGe,CACnB+C,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtFC,SAAU,CACP,CAUDwB,YAAa,qBAIbxE,KAAM,CACL,KACA,KACA,KACA,KACA,GACA,KACA,KACA,KACA,GACA,KACA,KACA,aA4FF,kBAACY,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACN,EAAA,EAAD,CAAMkE,MAAI,GACT,kBAAC7D,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACC,kBAAC6D,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,mBACA,kBAACC,EAAA,EAAD,CACCC,KAAK,SACLzB,MAAQxB,EACRkD,SAAW,SAAC5B,GAAD,OAAO,EAAK6B,qBAAqB7B,EAAG,gBAE/C,4BAAQE,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,aAAd,aACA,4BAAQA,MAAM,MAAd,SAIH,kBAACvC,EAAA,EAAD,KACC,kBAAC6D,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,eACA,kBAACC,EAAA,EAAD,CACCC,KAAK,SACLzB,MAAQvB,EACRiD,SAAW,SAAC5B,GAAD,OAAO,EAAK6B,qBAAqB7B,EAAG,YAE/C,4BAAQE,MAAM,OAAd,OACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,UAAd,aAIH,kBAACvC,EAAA,EAAD,KACC,kBAAC6D,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,kBACA,kBAACC,EAAA,EAAD,CACCC,KAAK,SACLzB,MAAQtB,EACRgD,SAAW,SAAC5B,GAAD,OAAO,EAAK6B,qBAAqB7B,EAAG,cAE/C,4BAAQE,MAAM,OAAd,OACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,KAAd,WAKJ,uBAAGpC,MAAO,CAAEgE,WAAY,SAAxB,iGAOJ,kBAACpE,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,EAAD,CACCV,MAAM,sBACNC,YAAc0C,EACd5C,UAAU,gBACVD,QAAUA,EACVD,KAAOA,MAmCV,kBAACY,EAAA,EAAD,KAEC,kBAACC,EAAA,EAAD,KACC,kBAACN,EAAA,EAAD,KACC,kBAACE,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAWC,IAAI,MAAf,0BAED,kBAACU,EAAA,EAAD,KACC,kBAAC4D,EAAA,EAAD,CAAOzE,UAAU,cAAc0E,YAAU,GACxC,2BAAO1E,UAAU,gBAChB,4BACC,0CACA,yCACA,0CACA,wBAAIA,UAAU,eAAd,6BACA,yCAGF,+BACGwB,EAAmBY,KAAI,SAACC,GACzB,IAAMsC,GAAoBtC,EAAST,eAAiBS,EAASR,aAC1DQ,EAASP,iBAAmBO,EAASN,eACrCM,EAASL,YAAc,EAC1B,OACC,wBAAIW,IAAMN,EAASuC,KAClB,4BAAMvC,EAASwC,WACf,4BAAMxC,EAASyC,UACf,4BAAMzC,EAASjB,YACf,wBAAIpB,UAAU,eACX2E,EAAgB/D,QAAQ,GAD3B,KAGA,4BACC,kBAAC,UAAD,CAASmE,GAAE,mBAAe1C,EAAS2C,OAAnC,gC,GAxZUjE,IAAMC,W,SC8HfiE,E,kDAhId,WAAY9F,GAAQ,IAAD,8BAClB,cAAMA,IAMDC,MAAQ,CACZ8F,aAAcxD,GARG,E,mGAiBlB,OACC,kBAACtB,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACN,EAAA,EAAD,KACC,kBAACE,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAWC,IAAI,MAAf,WAED,kBAACU,EAAA,EAAD,KACC,kBAACsE,EAAA,EAAD,KACC,kBAAC/E,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC6D,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOiB,IAAI,qBAAX,cACA,kBAAChB,EAAA,EAAD,CAAOiB,KAAK,oBAAoBC,GAAG,wBAGrC,kBAACjF,EAAA,EAAD,KACC,kBAAC6D,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOiB,IAAI,oBAAX,aACA,kBAAChB,EAAA,EAAD,CAAOiB,KAAK,mBAAmBC,GAAG,wBAIrC,kBAAClF,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC6D,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOiB,IAAI,sBAAX,cACA,kBAAChB,EAAA,EAAD,CACCC,KAAK,SACLgB,KAAK,qBACLC,GAAG,sBAEH,uCACA,uCACA,sCACA,6CACA,yCAIH,kBAACjF,EAAA,EAAD,KACC,kBAAC6D,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAOiB,IAAI,iBAAX,SACA,kBAAChB,EAAA,EAAD,CAAOC,KAAK,SAASgB,KAAK,gBAAgBC,GAAG,iBAC5C,wCACA,0CACA,qD,+BAaD,IACDJ,EAAiB3F,KAAKH,MAAtB8F,aACR,OACC,oCACG3F,KAAKgG,kBACP,kBAACnF,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACN,EAAA,EAAD,KACC,kBAACE,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAWC,IAAI,MAAf,uBAED,kBAACU,EAAA,EAAD,KACC,kBAAC4D,EAAA,EAAD,CAAOzE,UAAU,cAAc0E,YAAU,GACxC,2BAAO1E,UAAU,gBAChB,4BACC,0CACA,yCACA,0CACA,wBAAIA,UAAU,eAAd,6BACA,yCAGF,+BACGkF,EAAa9C,KAAI,SAACC,GACnB,IAAMsC,GAAoBtC,EAAST,eAAiBS,EAASR,aAC1DQ,EAASP,iBAAmBO,EAASN,eACrCM,EAASL,YAAc,EAC1B,OACC,wBAAIW,IAAMN,EAASuC,KAClB,4BAAMvC,EAASwC,WACf,4BAAMxC,EAASyC,UACf,4BAAMzC,EAASjB,YACf,wBAAIpB,UAAU,eACX2E,EAAgB/D,QAAQ,GAD3B,KAGA,4BACC,kBAAC,UAAD,CAASmE,GAAE,mBAAe1C,EAAS2C,OAAnC,gC,GAjHkBjE,IAAMC,W,wFCchCwE,E,kDAEL,WAAYrG,GAAQ,IAAD,0BAEVmG,GADR,cAAMnG,IACcA,MAAMsG,MAAMC,OAAxBJ,GAEFjD,EAAWsD,eAAKjE,EAAc,CAAE,KAAQ4D,IACxCX,GAAoBtC,EAAST,eAAiBS,EAASR,aAC1DQ,EAASP,iBAAmBO,EAASN,eACrCM,EAASL,YAAc,EAPR,OAQlB,EAAK5C,MAAQ,CACZwG,UAAW,YACXC,iBAAkB,GAClBtE,qBAAsB,CACrB,YACA,UACA,cACA,YACA,SAEDc,WACAsC,mBAGD,EAAKmB,WAAa,CACjB,uBAAwB,CACvBT,KAAM,uBACNhB,KAAM,uBAEP,qBAAsB,CACrBgB,KAAM,qBACNhB,KAAM,uBAEP,QAAW,CACVgB,KAAM,UACNhB,KAAM,uBAEP,UAAa,CACZgB,KAAM,YACNhB,KAAM,uBAEP,oBAAqB,CACpBgB,KAAM,oBACNhB,KAAM,uBAEP,SAAY,CACXgB,KAAM,WACNhB,KAAM,WAGP,kBAAmB,CAClBgB,KAAM,kBACNhB,KAAM,uBAEP,YAAe,CACdgB,KAAM,cACNhB,KAAM,uBAEP,YAAe,CACdgB,KAAM,cACNhB,KAAM,uBAEP,SAAY,CACXgB,KAAM,WACNhB,KAAM,uBAEP,OAAU,CACTgB,KAAM,SACNhB,KAAM,uBAGP,OAAU,CACTgB,KAAM,SACNhB,KAAM,WAEP,WAAc,CACbgB,KAAM,aACNhB,KAAM,WAEP,eAAgB,CACfgB,KAAM,eACNhB,KAAM,WAGP,SAAY,CACXgB,KAAM,WACNhB,KAAM,uBAEP,oBAAqB,CACpBgB,KAAM,oBACNhB,KAAM,uBAEP,YAAa,CACZgB,KAAM,YACNhB,KAAM,WAEP,eAAgB,CACfgB,KAAM,eACNhB,KAAM,YAGR,EAAK0B,2BAA6B,CACjC,CAECC,QAAS,CACR,EAAKF,WAAW,wBAChB,EAAKA,WAAW,sBAChB,EAAKA,WAAL,QACA,EAAKA,WAAL,UACA,EAAKA,WAAW,qBAChB,EAAKA,WAAL,UAEDG,YAAa,gDACbpG,KAAM,gBAEP,CAECmG,QAAS,CACR,EAAKF,WAAW,wBAChB,EAAKA,WAAW,mBAChB,EAAKA,WAAL,YACA,EAAKA,WAAL,YACA,EAAKA,WAAL,QAEDG,YAAa,uCACbpG,KAAM,gBAEP,CAECmG,QAAS,CACR,EAAKF,WAAL,YACA,EAAKA,WAAL,OACA,EAAKA,WAAL,WACA,EAAKA,WAAW,gBAChB,EAAKA,WAAL,UAEDG,YAAa,qDACbpG,KAAM,mBAEP,CAECmG,QAAS,CACR,EAAKF,WAAW,sBAChB,EAAKA,WAAL,SACA,EAAKA,WAAW,qBAChB,EAAKA,WAAW,aAChB,EAAKA,WAAW,iBAEjBG,YAAa,kDACbpG,KAAM,qBAEP,CAECmG,QAAS,CACR,EAAKF,WAAW,wBAChB,EAAKA,WAAW,sBAChB,EAAKA,WAAW,qBAChB,EAAKA,WAAL,UAEDG,YAAa,4DACbpG,KAAM,oBA9JU,E,gEAmKE,IAAD,SACwBN,KAAKH,MAAxCiD,EADW,EACXA,SAAUd,EADC,EACDA,qBAKjBK,EAKGS,EALHT,eACAC,EAIGQ,EAJHR,aACAC,EAGGO,EAHHP,iBACAC,EAEGM,EAFHN,eACAC,EACGK,EADHL,WAGG6D,EAAmB,GACvBtE,EAAqBa,KAAI,SAAC8D,EAAWC,GACpC,IAAMC,EAAU,EAAKL,2BAA2BI,GAC5CE,EAAiB,GAEjBC,EAAYtE,EACG,cAAdkE,EACJI,EAAY1E,EACa,YAAdsE,EACXI,EAAYzE,EACa,gBAAdqE,EACXI,EAAYxE,EACa,cAAdoE,IACXI,EAAYvE,GAGbqE,EAAQJ,QAAQ5D,KAAI,SAACmE,GAepB,IAAI1G,EAAO,eACPP,EAAQ,UAEN4B,EADWoF,EAAY,GACC,EAAI,GAC5BE,EAASC,KAAKC,MAAMD,KAAKD,SAAWtF,GAE1B,IAAXsF,GACJ3G,EAAO,8BACPP,EAAQ,WACc,IAAXkH,IACX3G,EAAO,sBACPP,EAAQ,WAET+G,EAAeM,KAAf,eACIJ,EADJ,CAEC1G,OACAP,cAKFuG,EAAiBc,KAAK,CACrBtB,KAAMa,EACNF,QAASK,EACTJ,YAAaG,EAAQH,YACrBpG,KAAMuG,EAAQvG,KACdR,MAAOiH,OAGT/G,KAAK6D,SAAS,CACbyC,uB,oCAIYxG,GACb,IAAIC,EAAQ,UAMZ,OALKD,EAAQ,IAAMA,EAAQ,GAC1BC,EAAQ,UACGD,GAAS,KACpBC,EAAQ,WAEFA,I,qDAGwB,IAAD,EACaC,KAAKH,MAAxCiD,EADsB,EACtBA,SAAUd,EADY,EACZA,qBAKjBK,EAKGS,EALHT,eACAC,EAIGQ,EAJHR,aACAC,EAGGO,EAHHP,iBACAC,EAEGM,EAFHN,eACAC,EACGK,EADHL,WA8BD,MA3Ba,CACZO,OAAQhB,EACRiB,SAAU,CACP,CAGDC,gBAAiB,CAChBlD,KAAKoB,cAAciB,GACnBrC,KAAKoB,cAAckB,GACnBtC,KAAKoB,cAAcmB,GACnBvC,KAAKoB,cAAcoB,GACnBxC,KAAKoB,cAAcqB,IAMpBxC,KAAM,CACLoC,EACAC,EACAC,EACAC,EACAC,Q,gCAYK4E,GACTrH,KAAK6D,SAAS,CACbwC,UAAWgB,M,kCAIA,IAAD,SAKPrH,KAAKH,MAFRwG,GAHU,EAEVvD,SAFU,EAGVuD,WACAC,EAJU,EAIVA,iBAED,OAAiC,IAA5BA,EAAiB1D,OACd,kBAAC0E,EAAA,EAAD,CAAOvH,MAAM,QAAb,aAGP,oCACC,kBAACwH,EAAA,EAAD,CAAKC,MAAI,GACNlB,EAAiBzD,KAAI,SAAC8D,GAAD,OACtB,kBAACc,EAAA,EAAD,CAASrE,IAAMuD,EAAUb,MACxB,kBAAC4B,EAAA,EAAD,CACCjH,UAAYkH,IAAW,CAAEC,OAAQvB,IAAS,UAASM,EAAUb,QAC7D+B,QAAS,kBAAM,EAAKC,UAAL,UAAmBnB,EAAUb,SAE1Ca,EAAUb,WAKhB,kBAACiC,EAAA,EAAD,CAAY1B,UAAYA,GACrBC,EAAiBzD,KAAI,SAAC8D,GAAD,OACtB,kBAACqB,EAAA,EAAD,CAASC,MAAQtB,EAAUb,KAAO1C,IAAMuD,EAAUb,MACjD,kBAACjF,EAAA,EAAD,CAAKI,MAAO,CAAEiH,QAAS,SACtB,kBAACpH,EAAA,EAAD,KACC,kBAACD,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,2BACC,uBAAGL,UAAYkG,EAAUrG,KAAOW,MAAO,CAAEC,SAAU,OAAQiH,aAAc,SACxE,IACCxB,EAAUD,cAGd,kBAAC5F,EAAA,EAAD,CAAKL,UAAU,cACd,kBAACO,EAAA,EAAD,CAAOjB,MAAM,SACZkB,MAAO,CACNC,SAAU,OACVC,WAAY,EAAKC,cAAcuF,EAAU7G,OACzCC,MAAO,YAEN4G,EAAU7G,MAAMuB,QAAQ,GAN3B,OAUF,kBAAC6D,EAAA,EAAD,CAAOC,YAAU,GAChB,2BAAO1E,UAAU,gBAChB,4BACC,sCACA,sCACA,sCAIF,+BACGkG,EAAUF,QAAQ5D,KAAI,SAACmE,GAAD,OACvB,wBAAI5D,IAAM4D,EAAOlB,MAChB,4BAAI,uBAAG7E,MAAO,CAAElB,MAAOiH,EAAOjH,OAASU,UAAYuG,EAAO1G,QAC1D,4BAAI,gCAAU0G,EAAOlB,OACrB,4BAAMkB,EAAOlC,sB,+BAef,IAAD,EAC8B9E,KAAKH,MAAnCiD,EADA,EACAA,SAAUsC,EADV,EACUA,gBACdgD,EAAe,eACfC,EAAgB,UAChBC,EAAkB,kEAEjBlD,EAAkB,IAAMA,GAAmB,IAC/CgD,EAAe,8BACfC,EAAgB,UAChBC,EAAkB,2EAGPlD,EAAkB,KAC7BgD,EAAe,sBACfC,EAAgB,UAChBC,EAAkB,gFAOnB,IACIC,EAAqB,UACrBC,EAAiB,UAGjBC,EAAoB,eACpBC,EAAgB,eACftD,EAAkB,IAAMA,GAAmB,IAC/CmD,EAAqB,UACrBE,EAAoB,+BACTrD,EAAkB,IAAMA,GAAmB,IACtDmD,EAAqB,UACrBE,EAAoB,8BAEpBD,EAAiB,UACjBE,EAAgB,+BACLtD,EAAkB,KAC7BmD,EAAqB,UACrBE,EAAoB,8BAEpBD,EAAiB,UACjBE,EAAgB,uBAmCjB,OACC,oCACC,kBAAC7H,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,GAAK,GACT,yBAAKN,UAAU,eACd,yBAAKkI,IAAM7F,EAAS8F,QAAUC,IAAI,OAGpC,kBAAC/H,EAAA,EAAD,KACC,0BACCG,MAAO,CACN6H,WAAY,OACZC,aAAc,OACdC,WAAY,MACZ9H,SAAU,YACVnB,MAAO,UAEN+C,EAASwC,UARZ,IAQ0BxC,EAASyC,UAEnC,4BAAMzC,EAASjB,WAAf,MAAgCiB,EAASmG,UACzC,kBAACjI,EAAA,EAAD,CAAOjB,MAAM,SACZkB,MAAO,CACNC,SAAU,OACVC,WAAYnB,KAAKoB,cAAcgE,GAC/BrF,MAAO,YAENqF,EAAgB/D,QAAQ,GAN3B,OAUF,6BACA,kBAACR,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACwG,EAAA,EAAD,CAAOvH,MAAM,QACZ,uBAAGU,UAAY2H,EAAenH,MAAO,CAAElB,MAAOsI,KAC7C,IAFF,oCAGkC,gCAAUvF,EAASwC,UACnD,IACCxC,EAASyC,UALZ,+BAME,IACC+C,KAIL,kBAACzH,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,EAAD,CACCV,MAAM,sBACND,UAAU,gBACVD,QAjFW,CAMf6D,OAAQ,CACPC,SAAS,GAKVC,OAAQ,CACPC,MAAO,CACN,CACCF,SAAS,EACTG,MAAO,CACNC,UAAW,QACXC,aAAc,EACdC,aAAc,OAIjBC,MAAO,CACN,CACCJ,MAAO,CACNC,UAAW,aAwDXnE,KAAOD,KAAK8D,mCAIf,kBAACjD,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACN,EAAA,EAAD,KACC,kBAACE,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAWC,IAAI,MACd,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,oCAGA,kBAACA,EAAA,EAAD,CAAKC,GAAK,EAAIN,UAAU,cACvB,kBAACO,EAAA,EAAD,CAAOjB,MAAM,SACZkB,MAAO,CACNC,SAAU,OACVC,WAAYnB,KAAKoB,cAAcgE,GAC/BrF,MAAO,YAENqF,EAAgB/D,QAAQ,GAN3B,SAYJ,kBAACC,EAAA,EAAD,KACGtB,KAAKkJ,aAER,kBAACC,EAAA,EAAD,CAAY1I,UAAU,cACrB,uBAAGA,UAAU,uBACZ,IAFF,4JASH,kBAACI,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACN,EAAA,EAAD,KACC,kBAACE,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAWC,IAAI,MAAf,aAID,kBAACU,EAAA,EAAD,KACC,kBAAC4D,EAAA,EAAD,CAAOC,YAAU,GAChB,+BACC,4BACC,4BAAI,uBAAGlE,MAAO,CAAElB,MA5JE,WA4J6BU,UAxJ9B,kBAyJjB,4BAAI,qDACJ,uLAOD,4BACC,4BAAI,uBAAGQ,MAAO,CAAElB,MAAOwI,GAAsB9H,UAAYgI,KACzD,4BAAI,yDACJ,qKAKD,4BACC,4BAAI,uBAAGxH,MAAO,CAAElB,MAAOyI,GAAkB/H,UAAYiI,KACrD,4BAAI,8CACJ,4LAQH,kBAACS,EAAA,EAAD,CAAY1I,UAAU,cACrB,uBAAGA,UAAU,uBACZ,IAFF,4F,GA5kBsBe,IAAMC,WAinBrB2H,cAAWnD,G,6CC/kBXoD,E,uKApDb,OACC,kBAAC9B,EAAA,EAAD,CAAK9G,UAAU,UAAU6I,QAAM,GAC9B,kBAACC,EAAA,EAAD,CAAsBC,KAAG,GACxB,kBAACC,EAAA,EAAD,CACCC,OAAK,EACL3J,MAAM,UACN4J,cAAY,WACZH,KAAG,GAEH,yBAAK/I,UAAU,8CACf,uBAAGA,UAAU,8BACb,uBAAGA,UAAU,aAAb,kBAED,kBAACmJ,EAAA,EAAD,CAAcnJ,UAAU,kBAAkBoJ,OAAK,EAACjJ,IAAI,MACnD,kBAAC8G,EAAA,EAAD,CAAS9G,IAAI,MACZ,kBAACkJ,EAAA,EAAD,CAAcrJ,UAAU,YAAxB,8CAMH,kBAAC8I,EAAA,EAAD,CAAsBC,KAAG,GACxB,kBAACC,EAAA,EAAD,CACCC,OAAK,EACL3J,MAAM,UACN4J,cAAY,WACZH,KAAG,EACH3B,QAAU,SAAC1E,GAAD,OAAOA,EAAE4G,mBAEnB,6BACC,uBAAGtJ,UAAU,uBAEd,uBAAGA,UAAU,uCACb,uBAAGA,UAAU,aAAb,YAED,kBAACmJ,EAAA,EAAD,CAAcnJ,UAAU,kBAAkBoJ,OAAK,EAACjJ,IAAI,MACnD,kBAAC8G,EAAA,EAAD,CAAS9G,IAAI,MACZ,kBAACkJ,EAAA,EAAD,CAAcrJ,UAAU,YAAxB,+BAED,kBAACqJ,EAAA,EAAD,CAAcE,SAAO,EAACpJ,IAAI,OAC1B,kBAAC8G,EAAA,EAAD,CAAS9G,IAAI,MACZ,kBAACkJ,EAAA,EAAD,CAAcrJ,UAAU,YAAxB,gCAIH,wBAAIA,UAAU,6B,GAhDGe,IAAMyI,eC+DZC,E,uKAjCb,OACC,kBAAC,WAAD,CACCC,YAAY,QACZC,YAAa,CACZC,UAAW,IACXC,KAAM,kBACNC,OAAQ,oBACRC,SAAU,QAEXC,OAASzK,KAAKJ,MAAM6K,OACpBC,aAAe,kBAAM,kBAAC,EAAD,QAErB,yBAAKjK,UAAU,WAEZT,KAAKJ,MAAM+K,e,GAhDQnJ,IAAMC,WCkFjBmJ,E,kDAhDd,WAAYhL,GAAQ,IAAD,sBAClB,cAAMA,GACN,IAAMiL,EAAgB,CACrB,CACC/E,KAAM,YACNxF,KAAM,wBACNwK,KAAM,IACNC,UAAWnJ,EACXoJ,OAAQ,IAET,CACClF,KAAM,qBACNxF,KAAM,cACNwK,KAAM,aACNC,UAAWrF,EACXsF,OAAQ,KAGJC,EAAe,CACpB,CAGCH,KAAM,gBACNC,UAAW9E,EACX+E,OAAQ,KAxBQ,OA2BlB,EAAKnL,MAAQ,CACZgL,gBACAI,gBA7BiB,E,2DAXFR,GAChB,OAAOA,EAAO5H,KAAI,SAACqI,EAAO9H,GAAR,OACjB,kBAAC,IAAD,CACC+H,OAAK,EACLL,KAAOI,EAAMJ,KACbC,UAAYG,EAAMH,UAClB3H,IAAMA,W,8CAsCC,IAAD,EACgCpD,KAAKH,MAArCgL,EADA,EACAA,cAAeI,EADf,EACeA,aACvB,OACC,kBAAC,EAAD,CAAaR,OAASI,GACrB,kBAAC,IAAD,KACGD,EAAIQ,UAAUP,GACdD,EAAIQ,UAAUH,S,GAzDHzJ,IAAMC,WCXJ4J,QACW,cAA7B9H,OAAO+H,SAASC,UAEe,UAA7BhI,OAAO+H,SAASC,UAEhBhI,OAAO+H,SAASC,SAASrF,MACvB,2DCXNsF,IAASC,OACR,kBAAC,aAAD,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SDwHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3I,QAAQ2I,MAAMA,EAAMC,c","file":"static/js/main.40d4c65d.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n\tCard,\n\tCardBody,\n\tCardHeader,\n\tCardTitle,\n\tCol,\n\tRow,\n\tBadge,\n} from \"reactstrap\";\n// import classNames from \"classnames\";\nimport { Line, HorizontalBar } from \"react-chartjs-2\";\n\n\nclass GraphWidget extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\n\t\t};\n\t}\n\n\tgetGraphColor(score) {\n\t\tlet color = \"#2bffc6\";\n\t\tif ( score < 74 && score > 64 ) {\n\t\t\tcolor = \"#ff8d72\";\n\t\t} else if ( score <= 64) {\n\t\t\tcolor = \"#f5365c\";\n\t\t}\n\t\treturn color;\n\t}\n\n\trenderHorizontalBarChart() {\n\t\tconst { data, options, chartType } = this.props;\n\t\tif ( chartType === \"line\" ) {\n\t\t\treturn (\n\t\t\t\t<Line\n\t\t\t\t\tdata={ data }\n\t\t\t\t\toptions={ options }\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<HorizontalBar\n\t\t\t\tdata={ data }\n\t\t\t\toptions={ options }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tchartType,\n\t\t\tdata,\n\t\t\toptions,\n\t\t\ttitle,\n\t\t\ttitleNumber,\n\t\t\tsubTitle,\n\t\t\ticon\n\t\t} = this.props;\n\t\treturn (\n\t\t\t<Card className=\"card-chart\">\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardTitle tag=\"h3\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<i className={ icon } />{\" \"}\n\t\t\t\t\t\t\t\t{ title }\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t{ titleNumber && (\n\t\t\t\t\t\t\t\t<Col md={ 2 } className=\"text-right\">\n\t\t\t\t\t\t\t\t\t<Badge color=\"danger\"\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tfontSize: \"20px\",\n\t\t\t\t\t\t\t\t\t\t\tbackground: this.getGraphColor(titleNumber),\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#212529\",\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t{ titleNumber.toFixed(1) }%\n\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</CardTitle>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t{/* <div className=\"chart-area\"> */}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{ this.renderHorizontalBarChart() }\n\t\t\t\t\t\t{/* { chartType === \"line\" &&\n\t\t\t\t\t\t\t<Line\n\t\t\t\t\t\t\t\tdata={ data }\n\t\t\t\t\t\t\t\toptions={ options }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t} */}\n\t\t\t\t\t</div>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\nexport default GraphWidget;\n","import React from \"react\";\nimport {\n\tCard,\n\tCardHeader,\n\tCardBody,\n\tCardTitle,\n} from \"reactstrap\";\n\nclass PercentageCard extends React.Component {\n\trender() {\n\t\tconst { title, color, percentage } = this.props;\n\t\treturn (\n\t\t\t<Card className=\"card-chart\">\n\t\t\t\t<CardHeader>\n\t\t\t\t\t<CardTitle tag=\"h3\">\n\t\t\t\t\t\t{ title }\n\t\t\t\t\t</CardTitle>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody className=\"text-center\">\n\t\t\t\t\t<div className=\"chart-area pt-4\">\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: \"80px\",\n\t\t\t\t\t\t\t\tcolor: `${ color }`,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ percentage }%\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\nexport default PercentageCard;","import { filter } from \"lodash\";\nimport React from \"react\";\nimport {\n\tRow,\n\tCol,\n\tCard,\n\tCardTitle,\n\tCardHeader,\n\tCardBody,\n\tTable,\n\tLabel,\n\tInput,\n\tFormGroup,\n} from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport GraphWidget from \"../common/GraphWidget\";\n\nimport atRiskEmployees from \"./__mocks__/atRiskEmployees.json\";\nimport PercentageCard from \"../common/PercentageCard\";\n\nimport employeeList from \"../employees/__mocks__/employeeList.json\";\nclass Dashboard extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdepartment: \"all\",\n\t\t\tgender: \"all\",\n\t\t\tageRange: \"all\",\n\t\t\texperienceIndicators: [\n\t\t\t\t\"Belonging\",\n\t\t\t\t\"Purpose\",\n\t\t\t\t\"Achievement\",\n\t\t\t\t\"Happiness\",\n\t\t\t\t\"Vigor\",\n\t\t\t],\n\t\t\ttopAtRiskEmployees: filter(employeeList, (o) => {\n\t\t\t\tconst experienceScore = ((o.belongingScore + o.purposeScore\n\t\t\t\t\t+ o.achievementScore + o.happinessScore\n\t\t\t\t\t+ o.vigorScore) / 5);\n\t\t\t\treturn experienceScore < 78;\n\t\t\t}),\n\t\t\temployeeExperienceList: employeeList,\n\t\t};\n\t}\n\n\tgetGraphColor(score) {\n\t\tlet color = \"#2bffc6\";\n\t\tif ( score < 74 && score > 64 ) {\n\t\t\tcolor = \"#ff8d72\";\n\t\t} else if ( score <= 64) {\n\t\t\tcolor = \"#f5365c\";\n\t\t}\n\t\treturn color;\n\t}\n\n\tcreateEmployeeExperienceData() {\n\t\tconst {\n\t\t\t// department,\n\t\t\t// gender,\n\t\t\t// ageRange,\n\t\t\temployeeExperienceList,\n\t\t\texperienceIndicators,\n\t\t} = this.state;\n\t\t// * red: #f5365c\n\t\t// * warning: #ff8d72\n\t\t// * success: #2bffc6\n\t\t// const {\n\t\t// \tbelongingScore,\n\t\t// \tpurposeScore,\n\t\t// \tachievementScore,\n\t\t// \thappinessScore,\n\t\t// \tvigorScore,\n\t\t// } = employee;\n\t\tconst totalEmployees = employeeExperienceList.length;\n\t\tlet belongingScore = 0;\n\t\tlet purposeScore = 0;\n\t\tlet achievementScore = 0;\n\t\tlet happinessScore = 0;\n\t\tlet vigorScore = 0;\n\t\temployeeExperienceList.map((employee) => {\n\t\t\tbelongingScore += employee.belongingScore;\n\t\t\tpurposeScore += employee.purposeScore;\n\t\t\tachievementScore += employee.achievementScore;\n\t\t\thappinessScore += employee.happinessScore;\n\t\t\tvigorScore += employee.vigorScore;\n\t\t});\n\n\t\t// Next calculate the average for each of the scores above\n\t\tbelongingScore = (belongingScore / totalEmployees);\n\t\tpurposeScore = (purposeScore / totalEmployees);\n\t\tachievementScore = (achievementScore / totalEmployees);\n\t\thappinessScore = (happinessScore / totalEmployees);\n\t\tvigorScore = (vigorScore / totalEmployees);\n\n\t\t// Finally, calculate the average experience index score for this subset of employees\n\t\tconst averageExperienceScore = ((belongingScore + purposeScore\n\t\t\t+ achievementScore + happinessScore + vigorScore) / 5);\n\n\t\tconst data = {\n\t\t\tlabels: experienceIndicators,\n\t\t\tdatasets: [\n\t\t\t  \t{\n\t\t\t\t\t// label: 'Employee Experience',\n\t\t\t\t\t// backgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\tthis.getGraphColor(belongingScore),\n\t\t\t\t\t\tthis.getGraphColor(purposeScore),\n\t\t\t\t\t\tthis.getGraphColor(achievementScore),\n\t\t\t\t\t\tthis.getGraphColor(happinessScore),\n\t\t\t\t\t\tthis.getGraphColor(vigorScore),\n\t\t\t\t\t],\n\t\t\t\t\t// borderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t// borderWidth: 2,\n\t\t\t\t\t// hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\t\t// hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\tdata: [\n\t\t\t\t\t\tbelongingScore,\n\t\t\t\t\t\tpurposeScore,\n\t\t\t\t\t\tachievementScore,\n\t\t\t\t\t\thappinessScore,\n\t\t\t\t\t\tvigorScore,\n\t\t\t\t\t],\n\t\t\t  \t}\n\t\t\t]\n\t\t};\n\t\treturn { data, averageExperienceScore };\n\t}\n\n\thandleSelectOnChange(e, key) {\n\t\tconst {\n\t\t\tdepartment,\n\t\t\tgender,\n\t\t\tageRange,\n\t\t\temployeeExperienceList,\n\t\t} = this.state;\n\t\tconst { value } = e.target;\n\t\twindow.console.log(value, key);\n\t\tconst filteredEmployees = filter(employeeList, (employee) => {\n\t\t\tif ( value === \"all\" ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( key === \"ageRange\" ) {\n\t\t\t\twindow.console.log(value);\n\t\t\t\tlet ageLimit = 45;\n\t\t\t\tif ( value === \"0\" ) {\n\t\t\t\t\tageLimit = 24;\n\t\t\t\t} else if ( value === \"1\" ) {\n\t\t\t\t\tageLimit = 34;\n\t\t\t\t} else if ( value === \"2\" ) {\n\t\t\t\t\tageLimit = 44;\n\t\t\t\t}\n\t\t\t\t// Calculate based on age\n\t\t\t\treturn employee.age <= ageLimit;\n\t\t\t}\n\n\t\t\treturn employee[key] === value;\n\t\t});\n\n\t\t// window.console.log(filteredEmployees);\n\t\tthis.setState({\n\t\t\t[key]: value,\n\t\t\temployeeExperienceList: filteredEmployees,\n\t\t})\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tdepartment,\n\t\t\tgender,\n\t\t\tageRange,\n\t\t\ttopAtRiskEmployees,\n\t\t} = this.state;\n\n\t\tconst { data, averageExperienceScore } = this.createEmployeeExperienceData();\n\t\tconst companyData = {\n\t\t\tlabels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n\t\t\tdatasets: [\n\t\t\t  \t{\n\t\t\t\t\t// label: 'Employee Experience',\n\t\t\t\t\t// backgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\t\t\t// backgroundColor: [\n\t\t\t\t\t// \tthis.getGraphColor(belongingScore),\n\t\t\t\t\t// \tthis.getGraphColor(purposeScore),\n\t\t\t\t\t// \tthis.getGraphColor(achievementScore),\n\t\t\t\t\t// \tthis.getGraphColor(happinessScore),\n\t\t\t\t\t// \tthis.getGraphColor(vigorScore),\n\t\t\t\t\t// ],\n\t\t\t\t\tborderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t// borderWidth: 2,\n\t\t\t\t\t// hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\t\t// hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\tdata: [\n\t\t\t\t\t\t70.2,\n\t\t\t\t\t\t75.8,\n\t\t\t\t\t\t65.3,\n\t\t\t\t\t\t70.5,\n\t\t\t\t\t\t71.0,\n\t\t\t\t\t\t75.6,\n\t\t\t\t\t\t76.9,\n\t\t\t\t\t\t80.7,\n\t\t\t\t\t\t79.0,\n\t\t\t\t\t\t82.3,\n\t\t\t\t\t\t82.3,\n\t\t\t\t\t\t82.3,\n\t\t\t\t\t],\n\t\t\t  \t}\n\t\t\t]\n\t\t}\n\t\tconst options = {\n\t\t\t// title: {\n\t\t\t// \tdisplay: true,\n\t\t\t// \ttext: \"\"\n\t\t\t// },\n\t\t\t// onClick: (e, c) => this.showExperienceSectionDetails(e, c),\n\t\t\tlegend: {\n\t\t\t\tdisplay: false,\n\t\t\t\t// labels: {\n\t\t\t\t// \tfontColor: \"white\",\n\t\t\t\t// }\n\t\t\t},\n\t\t\tscales: {\n\t\t\t\txAxes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tfontColor: \"white\",\n\t\t\t\t\t\t\tsuggestedMin: 0,\n\t\t\t\t\t\t\tsuggestedMax: 100,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tyAxes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tfontColor: \"white\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t};\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col lg=\"3\">\n\t\t\t\t\t\t<PercentageCard\n\t\t\t\t\t\t\ttitle=\"Retention Rate\"\n\t\t\t\t\t\t\tpercentage=\"92\"\n\t\t\t\t\t\t\tcolor=\"#2bffc6\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* <Card className=\"card-chart\">\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardTitle tag=\"h3\">\n\t\t\t\t\t\t\t\t\tRetention Rate\n\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody className=\"text-center\">\n\t\t\t\t\t\t\t\t<div className=\"chart-area pt-4\">\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tfontSize: \"80px\",\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"#2bffc6\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t92%\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card> */}\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col lg=\"9\">\n\t\t\t\t\t\t{/* This is going to be a line graph showing the history of the overall score for the company per month */}\n\t\t\t\t\t\t{/* Add a subtitle component to GraphWidget */}\n\t\t\t\t\t\t<GraphWidget\n\t\t\t\t\t\t\ttitle=\"Monthly Employee Index Score\"\n\t\t\t\t\t\t\tchartType=\"line\"\n\t\t\t\t\t\t\toptions={ options }\n\t\t\t\t\t\t\tdata={ companyData }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{/* This is going to be a line graph per month of employees vs employees hired vs employees left for that month (so 3 lines) */}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<GraphWidget title=\"At Risk Employees\" />\n\t\t\t\t\t\tThis is going to be a PIE chart with normal employees vs at risk employees (with different risk levels)\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<GraphWidget title=\"Survey Responses\" />\n\t\t\t\t\t\tAnother PIE chart showing percentage of users that have responded the current survey\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<GraphWidget title=\"Employee\" />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> */}\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Card body>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t\t<Label>Department</Label>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"select\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={ department }\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={ (e) => this.handleSelectOnChange(e, \"department\")}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"all\">All</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"R&D\">R&D</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"HR\">HR</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Marketing\">Marketing</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"IT\">IT</option>\n\t\t\t\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t\t<Label>Gender</Label>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"select\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={ gender }\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={ (e) => this.handleSelectOnChange(e, \"gender\")}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"all\">All</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"male\">Male</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"female\">Female</option>\n\t\t\t\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t\t<Label>Age Range</Label>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"select\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={ ageRange }\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={ (e) => this.handleSelectOnChange(e, \"ageRange\")}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"all\">All</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"0\">18 - 24</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"1\">25 - 34</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"2\">35 - 44</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"3\">45+</option>\n\t\t\t\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<p style={{ paddingTop: \"20px\" }}>\n\t\t\t\t\t\t\t\t\tThe graph below shows the average employee experience index scores for the\n\t\t\t\t\t\t\t\t\tentire company.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<GraphWidget\n\t\t\t\t\t\t\ttitle=\"Employee Experience\"\n\t\t\t\t\t\t\ttitleNumber={ averageExperienceScore }\n\t\t\t\t\t\t\tchartType=\"horizontalBar\"\n\t\t\t\t\t\t\toptions={ options }\n\t\t\t\t\t\t\tdata={ data }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t{/* <Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<GraphWidget title=\"Employee Experience Index\" />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<GraphWidget title=\"Belonging\" />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<GraphWidget title=\"Purpose\" />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<GraphWidget title=\"Achievement\" />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<GraphWidget title=\"Happiness\" />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<GraphWidget title=\"Vigor\" />\n\t\t\t\t\t</Col>\n\t\t\t\t</Row> */}\n\t\t\t\t{/*\n\t\t\t\t\tEmployee experience index: 69%\n\t\t\t\t\tBelonging: 70%\n\t\t\t\t\tPurpose: 70%\n\t\t\t\t\tAchievement: 69%\n\t\t\t\t\tHappiness: 74%\n\t\t\t\t\tVigor: 62%\n\t\t\t\t*/}\n\t\t\t\t<Row>\n\t\t\t\t\t{/* Add Top 5 at risk employees */}\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardTitle tag=\"h4\">Top At-Risk Employees</CardTitle>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<Table className=\"tablesorter\" responsive>\n\t\t\t\t\t\t\t\t\t<thead className=\"text-primary\">\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>First Name</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Last Name</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Department</th>\n\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">Employee Experience Score</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Actions</th>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t{ topAtRiskEmployees.map((employee) => {\n\t\t\t\t\t\t\t\t\t\t\tconst experienceScore = ((employee.belongingScore + employee.purposeScore\n\t\t\t\t\t\t\t\t\t\t\t\t+ employee.achievementScore + employee.happinessScore\n\t\t\t\t\t\t\t\t\t\t\t\t+ employee.vigorScore) / 5);\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={ employee._id }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{ employee.firstName }</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{ employee.lastName }</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{ employee.department }</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ experienceScore.toFixed(1) }%\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NavLink to={`employee/${ employee.guid }` }>View Details</NavLink>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport {\n\tRow,\n\tCol,\n\tCard,\n\tCardTitle,\n\tCardHeader,\n\tCardBody,\n\tTable,\n\tFormGroup,\n\tForm,\n\tLabel,\n\tInput,\n} from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\n\nimport employeeList from \"../employees/__mocks__/employeeList.json\";\n\nclass EmployeeDirectory extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// const { id } = this.props.match.params;\n\t\t// const employee = find(employeeList, { \"guid\": id });\n\t\t// const experienceScore = ((employee.belongingScore + employee.purposeScore\n\t\t// \t+ employee.achievementScore + employee.happinessScore\n\t\t// \t+ employee.vigorScore) / 5);\n\t\tthis.state = {\n\t\t\tallEmployees: employeeList,\n\t\t};\n\t}\n\n\trunSearch() {\n\n\t}\n\n\tbuildSearchForm() {\n\t\treturn (\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t<CardTitle tag=\"h3\">Search</CardTitle>\n\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t\t<Label for=\"employeeFirstName\">First Name</Label>\n\t\t\t\t\t\t\t\t\t\t\t<Input name=\"employeeFirstName\" id=\"employeeFirstName\" />\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t\t<Label for=\"employeeLastName\">Last Name</Label>\n\t\t\t\t\t\t\t\t\t\t\t<Input name=\"employeeLastName\" id=\"employeeLastName\" />\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t\t<Label for=\"employeeDepartment\">Department</Label>\n\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"select\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"employeeDepartment\"\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"employeeDepartment\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<option>All</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option>R&D</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option>HR</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Marketing</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option>IT</option>\n\t\t\t\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t\t<Label for=\"employeeScore\">Score</Label>\n\t\t\t\t\t\t\t\t\t\t\t<Input type=\"select\" name=\"employeeScore\" id=\"employeeScore\">\n\t\t\t\t\t\t\t\t\t\t\t\t<option>High</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Medium</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option>Danger</option>\n\t\t\t\t\t\t\t\t\t\t\t</Input>\n\t\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { allEmployees } = this.state;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ this.buildSearchForm() }\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardTitle tag=\"h3\">Employee Directory</CardTitle>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<Table className=\"tablesorter\" responsive>\n\t\t\t\t\t\t\t\t\t<thead className=\"text-primary\">\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<th>First Name</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Last Name</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Department</th>\n\t\t\t\t\t\t\t\t\t\t\t<th className=\"text-center\">Employee Experience Score</th>\n\t\t\t\t\t\t\t\t\t\t\t<th>Actions</th>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t{ allEmployees.map((employee) => {\n\t\t\t\t\t\t\t\t\t\t\tconst experienceScore = ((employee.belongingScore + employee.purposeScore\n\t\t\t\t\t\t\t\t\t\t\t\t+ employee.achievementScore + employee.happinessScore\n\t\t\t\t\t\t\t\t\t\t\t\t+ employee.vigorScore) / 5);\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={ employee._id }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{ employee.firstName }</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{ employee.lastName }</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{ employee.department }</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ experienceScore.toFixed(1) }%\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<NavLink to={`employee/${ employee.guid }` }>View Details</NavLink>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default EmployeeDirectory;","import classnames from \"classnames\";\nimport { lowerCase, find } from \"lodash\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n\tBadge,\n\tRow,\n\tCardHeader,\n\tAlert,\n\tCol,\n\tCard,\n\tTable,\n\tCardFooter,\n\tCardTitle,\n\tCardBody,\n\tNav,\n\tNavItem,\n\tNavLink,\n\tTabContent,\n\tTabPane,\n} from \"reactstrap\";\nimport PercentageCard from \"../common/PercentageCard\";\nimport GraphWidget from \"../common/GraphWidget\";\n\nimport employeeList from \"./__mocks__/employeeList.json\";\n\n/**\n * red: #f5365c\n * warning: #ffd600\n * success: #2dce89\n */\nclass EmployeeDetails extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst { id } = this.props.match.params;\n\n\t\tconst employee = find(employeeList, { \"guid\": id });\n\t\tconst experienceScore = ((employee.belongingScore + employee.purposeScore\n\t\t\t+ employee.achievementScore + employee.happinessScore\n\t\t\t+ employee.vigorScore) / 5);\n\t\tthis.state = {\n\t\t\tactiveTab: \"Belonging\",\n\t\t\temployeeAnalysis: [],\n\t\t\texperienceIndicators: [\n\t\t\t\t\"Belonging\",\n\t\t\t\t\"Purpose\",\n\t\t\t\t\"Achievement\",\n\t\t\t\t\"Happiness\",\n\t\t\t\t\"Vigor\",\n\t\t\t],\n\t\t\temployee,\n\t\t\texperienceScore,\n\t\t};\n\n\t\tthis.factorDefs = {\n\t\t\t\"Organizational Trust\": {\n\t\t\t\tname: \"Organizational Trust\",\n\t\t\t\ttype: \"Workplace Practices\",\n\t\t\t},\n\t\t\t\"Coworker relations\": {\n\t\t\t\tname: \"Coworker relations\",\n\t\t\t\ttype: \"Workplace Practices\",\n\t\t\t} ,\n\t\t\t\"Culture\": {\n\t\t\t\tname: \"Culture\",\n\t\t\t\ttype: \"Workplace Practices\",\n\t\t\t},\n\t\t\t\"Alignment\": {\n\t\t\t\tname: \"Alignment\",\n\t\t\t\ttype: \"Workplace Practices\",\n\t\t\t},\n\t\t\t\"Social Connection\": {\n\t\t\t\tname: \"Social Connection\",\n\t\t\t\ttype: \"Workplace Practices\",\n\t\t\t},\n\t\t\t\"Benefits\": {\n\t\t\t\tname: \"Benefits\",\n\t\t\t\ttype: \"Factual\",\n\t\t\t},\n\n\t\t\t\"Meaningful Work\": {\n\t\t\t\tname: \"Meaningful Work\",\n\t\t\t\ttype: \"Workplace Practices\",\n\t\t\t},\n\t\t\t\"Empowerment\": {\n\t\t\t\tname: \"Empowerment\",\n\t\t\t\ttype: \"Workplace Practices\",\n\t\t\t},\n\t\t\t\"Recognition\": {\n\t\t\t\tname: \"Recognition\",\n\t\t\t\ttype: \"Workplace Practices\",\n\t\t\t},\n\t\t\t\"Feedback\": {\n\t\t\t\tname: \"Feedback\",\n\t\t\t\ttype: \"Workplace Practices\",\n\t\t\t},\n\t\t\t\"Growth\": {\n\t\t\t\tname: \"Growth\",\n\t\t\t\ttype: \"Workplace Practices\",\n\t\t\t},\n\n\t\t\t\"Salary\": {\n\t\t\t\tname: \"Salary\",\n\t\t\t\ttype: \"Factual\",\n\t\t\t},\n\t\t\t\"Promotions\": {\n\t\t\t\tname: \"Promotions\",\n\t\t\t\ttype: \"Factual\",\n\t\t\t},\n\t\t\t\"Past Reviews\": {\n\t\t\t\tname: \"Past Reviews\",\n\t\t\t\ttype: \"Factual\",\n\t\t\t},\n\n\t\t\t\"Optimism\": {\n\t\t\t\tname: \"Optimism\",\n\t\t\t\ttype: \"Workplace Practices\",\n\t\t\t},\n\t\t\t\"Work Life Balance\": {\n\t\t\t\tname: \"Work Life Balance\",\n\t\t\t\ttype: \"Workplace Practices\",\n\t\t\t},\n\t\t\t\"Sick Time\": {\n\t\t\t\tname: \"Sick Time\",\n\t\t\t\ttype: \"Factual\",\n\t\t\t},\n\t\t\t\"Commute Time\": {\n\t\t\t\tname: \"Commute Time\",\n\t\t\t\ttype: \"Factual\",\n\t\t\t},\n\t\t};\n\t\tthis.experienceIndicatorDetails = [\n\t\t\t{\n\t\t\t\t// belonging\n\t\t\t\tfactors: [\n\t\t\t\t\tthis.factorDefs[\"Organizational Trust\"],\n\t\t\t\t\tthis.factorDefs[\"Coworker relations\"],\n\t\t\t\t\tthis.factorDefs[\"Culture\"],\n\t\t\t\t\tthis.factorDefs[\"Alignment\"],\n\t\t\t\t\tthis.factorDefs[\"Social Connection\"],\n\t\t\t\t\tthis.factorDefs[\"Benefits\"],\n\t\t\t\t],\n\t\t\t\tdescription: \"Feeling part of a team, group or organization\",\n\t\t\t\ticon: \"fas fa-heart\",\n\t\t\t},\n\t\t\t{\n\t\t\t\t// purpose\n\t\t\t\tfactors: [\n\t\t\t\t\tthis.factorDefs[\"Organizational Trust\"],\n\t\t\t\t\tthis.factorDefs[\"Meaningful Work\"],\n\t\t\t\t\tthis.factorDefs[\"Empowerment\"],\n\t\t\t\t\tthis.factorDefs[\"Recognition\"],\n\t\t\t\t\tthis.factorDefs[\"Growth\"],\n\t\t\t\t],\n\t\t\t\tdescription: \"Understanding why one's work matters\",\n\t\t\t\ticon: \"fas fa-brain\",\n\t\t\t},\n\t\t\t{\n\t\t\t\t// achievement\n\t\t\t\tfactors: [\n\t\t\t\t\tthis.factorDefs[\"Recognition\"],\n\t\t\t\t\tthis.factorDefs[\"Salary\"],\n\t\t\t\t\tthis.factorDefs[\"Promotions\"],\n\t\t\t\t\tthis.factorDefs[\"Past Reviews\"],\n\t\t\t\t\tthis.factorDefs[\"Feedback\"],\n\t\t\t\t],\n\t\t\t\tdescription: \"A sense of accomplishment in the work that is done\",\n\t\t\t\ticon: \"fas fa-bullseye\",\n\t\t\t},\n\t\t\t{\n\t\t\t\t// happiness\n\t\t\t\tfactors: [\n\t\t\t\t\tthis.factorDefs[\"Coworker relations\"],\n\t\t\t\t\tthis.factorDefs[\"Optimism\"],\n\t\t\t\t\tthis.factorDefs[\"Work Life Balance\"],\n\t\t\t\t\tthis.factorDefs[\"Sick Time\"],\n\t\t\t\t\tthis.factorDefs[\"Commute Time\"],\n\t\t\t\t],\n\t\t\t\tdescription: \"The pleasant feeling arising in and around work\",\n\t\t\t\ticon: \"fas fa-laugh-beam\",\n\t\t\t},\n\t\t\t{\n\t\t\t\t// vigor\n\t\t\t\tfactors: [\n\t\t\t\t\tthis.factorDefs[\"Organizational Trust\"],\n\t\t\t\t\tthis.factorDefs[\"Coworker relations\"],\n\t\t\t\t\tthis.factorDefs[\"Social Connection\"],\n\t\t\t\t\tthis.factorDefs[\"Optimism\"],\n\t\t\t\t],\n\t\t\t\tdescription: \"The presence of energy, enthusiasm and excitement at work\",\n\t\t\t\ticon: \"fas fa-fire-alt\",\n\t\t\t},\n\t\t];\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { employee, experienceIndicators } = this.state;\n\t\t// * red: #f5365c\n\t\t// * warning: #ff8d72\n\t\t// * success: #2bffc6\n\t\tconst {\n\t\t\tbelongingScore,\n\t\t\tpurposeScore,\n\t\t\tachievementScore,\n\t\t\thappinessScore,\n\t\t\tvigorScore,\n\t\t} = employee;\n\n\t\tlet employeeAnalysis = [];\n\t\texperienceIndicators.map((indicator, index) => {\n\t\t\tconst details = this.experienceIndicatorDetails[index];\n\t\t\tlet updatedFactors = [];\n\t\t\t// Default value to \"Vigor\"\n\t\t\tlet currScore = vigorScore;\n\t\t\tif ( indicator === \"Belonging\" ) {\n\t\t\t\tcurrScore = belongingScore;\n\t\t\t} else if ( indicator === \"Purpose\" ) {\n\t\t\t\tcurrScore = purposeScore;\n\t\t\t} else if ( indicator === \"Achievement\" ) {\n\t\t\t\tcurrScore = achievementScore;\n\t\t\t} else if ( indicator === \"Happiness\" ) {\n\t\t\t\tcurrScore = happinessScore;\n\t\t\t}\n\n\t\t\tdetails.factors.map((factor) => {\n\t\t\t\t// // Default value to \"Vigor\"\n\t\t\t\t// let currScore = vigorScore;\n\t\t\t\t// if ( indicator === \"Belonging\" ) {\n\t\t\t\t// \tcurrScore = belongingScore;\n\t\t\t\t// } else if ( indicator === \"Purpose\" ) {\n\t\t\t\t// \tcurrScore = purposeScore;\n\t\t\t\t// } else if ( indicator === \"Achievement\" ) {\n\t\t\t\t// \tcurrScore = achievementScore;\n\t\t\t\t// } else if ( indicator === \"Happiness\" ) {\n\t\t\t\t// \tcurrScore = happinessScore;\n\t\t\t\t// }\n\n\t\t\t\t// Based on the score coming from the data generate a realistic\n\t\t\t\t// amount invalid factor\n\t\t\t\tlet icon = \"fas fa-check\";\n\t\t\t\tlet color = \"#2dce89\";\n\t\t\t\tconst lowScore = currScore < 75;\n\t\t\t\tconst percentage = lowScore ? 2 : 10;\n\t\t\t\tconst random = Math.floor(Math.random() * percentage);\n\n\t\t\t\tif ( random === 0 ) {\n\t\t\t\t\ticon = \"fas fa-exclamation-triangle\";\n\t\t\t\t\tcolor = \"#ffd600\";\n\t\t\t\t} else if ( random === 1 ) {\n\t\t\t\t\ticon = \"fas fa-times-circle\";\n\t\t\t\t\tcolor = \"#f5365c\";\n\t\t\t\t}\n\t\t\t\tupdatedFactors.push({\n\t\t\t\t\t...factor,\n\t\t\t\t\ticon,\n\t\t\t\t\tcolor,\n\t\t\t\t\t// description: this.factorDefs[\"Culture\"],\n\t\t\t\t})\n\t\t\t});\n\n\t\t\temployeeAnalysis.push({\n\t\t\t\tname: indicator,\n\t\t\t\tfactors: updatedFactors,\n\t\t\t\tdescription: details.description,\n\t\t\t\ticon: details.icon,\n\t\t\t\tscore: currScore,\n\t\t\t});\n\t\t});\n\t\tthis.setState({\n\t\t\temployeeAnalysis,\n\t\t});\n\t}\n\n\tgetGraphColor(score) {\n\t\tlet color = \"#2bffc6\";\n\t\tif ( score < 74 && score > 64 ) {\n\t\t\tcolor = \"#ff8d72\";\n\t\t} else if ( score <= 64) {\n\t\t\tcolor = \"#f5365c\";\n\t\t}\n\t\treturn color;\n\t}\n\n\tcreateEmployeeExperienceData() {\n\t\tconst { employee, experienceIndicators } = this.state;\n\t\t// * red: #f5365c\n\t\t// * warning: #ff8d72\n\t\t// * success: #2bffc6\n\t\tconst {\n\t\t\tbelongingScore,\n\t\t\tpurposeScore,\n\t\t\tachievementScore,\n\t\t\thappinessScore,\n\t\t\tvigorScore,\n\t\t} = employee;\n\n\t\tconst data = {\n\t\t\tlabels: experienceIndicators,\n\t\t\tdatasets: [\n\t\t\t  \t{\n\t\t\t\t\t// label: 'Employee Experience',\n\t\t\t\t\t// backgroundColor: 'rgba(255,99,132,0.2)',\n\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\tthis.getGraphColor(belongingScore),\n\t\t\t\t\t\tthis.getGraphColor(purposeScore),\n\t\t\t\t\t\tthis.getGraphColor(achievementScore),\n\t\t\t\t\t\tthis.getGraphColor(happinessScore),\n\t\t\t\t\t\tthis.getGraphColor(vigorScore),\n\t\t\t\t\t],\n\t\t\t\t\t// borderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\t// borderWidth: 2,\n\t\t\t\t\t// hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n\t\t\t\t\t// hoverBorderColor: 'rgba(255,99,132,1)',\n\t\t\t\t\tdata: [\n\t\t\t\t\t\tbelongingScore,\n\t\t\t\t\t\tpurposeScore,\n\t\t\t\t\t\tachievementScore,\n\t\t\t\t\t\thappinessScore,\n\t\t\t\t\t\tvigorScore,\n\t\t\t\t\t],\n\t\t\t  \t}\n\t\t\t]\n\t\t};\n\t\treturn data;\n\t}\n\n\t// showExperienceSectionDetails(e, chartElement) {\n\t// \twindow.console.log(chartElement[0]._chart);\n\t// }\n\n\ttoggleTab(tab) {\n\t\tthis.setState({\n\t\t\tactiveTab: tab,\n\t\t});\n\t}\n\n\tbuildTabs() {\n\t\tconst {\n\t\t\temployee,\n\t\t\tactiveTab,\n\t\t\temployeeAnalysis,\n\t\t} = this.state;\n\t\tif ( employeeAnalysis.length === 0 ) {\n\t\t\treturn <Alert color=\"info\">Loading..</Alert>\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Nav tabs>\n\t\t\t\t\t{ employeeAnalysis.map((indicator) => (\n\t\t\t\t\t\t<NavItem key={ indicator.name }>\n\t\t\t\t\t\t\t<NavLink\n\t\t\t\t\t\t\t\tclassName={ classnames({ active: activeTab === `${ indicator.name }` })}\n\t\t\t\t\t\t\t\tonClick={() => this.toggleTab(`${ indicator.name }`) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ indicator.name }\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t))}\n\t\t\t\t</Nav>\n\t\t\t\t<TabContent activeTab={ activeTab }>\n\t\t\t\t\t{ employeeAnalysis.map((indicator) => (\n\t\t\t\t\t\t<TabPane tabId={ indicator.name } key={ indicator.name }>\n\t\t\t\t\t\t\t<Row style={{ padding: \"20px\" }}>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<i className={ indicator.icon } style={{ fontSize: \"20px\", paddingRight: \"5px\" }} />\n\t\t\t\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t{ indicator.description }\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Badge color=\"danger\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"20px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: this.getGraphColor(indicator.score),\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#212529\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t{ indicator.score.toFixed(1) }%\n\t\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t<Table responsive>\n\t\t\t\t\t\t\t\t\t\t<thead className=\"text-primary\">\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Factor</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th>Type</th>\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <th>Description</th> */}\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{ indicator.factors.map((factor) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={ factor.name }>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td><i style={{ color: factor.color }} className={ factor.icon } /></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td><strong>{ factor.name }</strong></td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{ factor.type }</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <td>{ factor.description }</td> */}\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t))}\n\t\t\t\t</TabContent>\n\t\t\t</>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst { employee, experienceScore } = this.state;\n\t\tlet analysisIcon = \"fas fa-check\";\n\t\tlet analysisColor = \"#2dce89\";\n\t\tlet analysisMessage = \"is healthy and indicates a low risk for problems with retention\";\n\n\t\tif ( experienceScore < 80 && experienceScore >= 65 ) {\n\t\t\tanalysisIcon = \"fas fa-exclamation-triangle\";\n\t\t\tanalysisColor = \"#ffd600\";\n\t\t\tanalysisMessage = \"needs attention and indicates a medium risk for problems with retention\";\n\t\t\t// retentionColor = \"#ffd600\";\n\t\t\t// retentionIcon = \"fas fa-exclamation-triangle\";\n\t\t} else if ( experienceScore < 65 ) {\n\t\t\tanalysisIcon = \"fas fa-times-circle\";\n\t\t\tanalysisColor = \"#f5365c\";\n\t\t\tanalysisMessage = \"needs urgent attention and indicates a high risk for problems with retention\";\n\t\t\t// retentionColor = \"#2dce89\";\n\t\t\t// workPerformanceColor = \"#ffd600\";\n\t\t\t// discretionaryIcon = \"fas fa-exclamation-triangle\";\n\t\t\t// retentionIcon = \"fas fa-times-circle\";\n\t\t}\n\n\t\tlet workPerformanceColor = \"#2dce89\";\n\t\tlet discretionaryColor = \"#2dce89\";\n\t\tlet retentionColor = \"#2dce89\";\n\n\t\tlet workPerformanceIcon = \"fas fa-check\";\n\t\tlet discretionaryIcon = \"fas fa-check\";\n\t\tlet retentionIcon = \"fas fa-check\";\n\t\tif ( experienceScore < 90 && experienceScore >= 80 ) {\n\t\t\tdiscretionaryColor = \"#ffd600\";\n\t\t\tdiscretionaryIcon = \"fas fa-exclamation-triangle\";\n\t\t} else if ( experienceScore < 80 && experienceScore >= 70 ) {\n\t\t\tdiscretionaryColor = \"#ffd600\";\n\t\t\tdiscretionaryIcon = \"fas fa-exclamation-triangle\";\n\n\t\t\tretentionColor = \"#ffd600\";\n\t\t\tretentionIcon = \"fas fa-exclamation-triangle\";\n\t\t} else if ( experienceScore < 70 ) {\n\t\t\tdiscretionaryColor = \"#ffd600\";\n\t\t\tdiscretionaryIcon = \"fas fa-exclamation-triangle\";\n\n\t\t\tretentionColor = \"#f5365c\";\n\t\t\tretentionIcon = \"fas fa-times-circle\";\n\t\t}\n\n\t\tconst options = {\n\t\t\t// title: {\n\t\t\t// \tdisplay: true,\n\t\t\t// \ttext: \"\"\n\t\t\t// },\n\t\t\t// onClick: (e, c) => this.showExperienceSectionDetails(e, c),\n\t\t\tlegend: {\n\t\t\t\tdisplay: false,\n\t\t\t\t// labels: {\n\t\t\t\t// \tfontColor: \"white\",\n\t\t\t\t// }\n\t\t\t},\n\t\t\tscales: {\n\t\t\t\txAxes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tfontColor: \"white\",\n\t\t\t\t\t\t\tsuggestedMin: 0,\n\t\t\t\t\t\t\tsuggestedMax: 100,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tyAxes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\tfontColor: \"white\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t};\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={ 2 }>\n\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t<img src={ employee.picture } alt=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tlineHeight: \"1.05\",\n\t\t\t\t\t\t\t\tmarginBottom: \"30px\",\n\t\t\t\t\t\t\t\tfontWeight: \"400\",\n\t\t\t\t\t\t\t\tfontSize: \"2.0625rem\",\n\t\t\t\t\t\t\t\tcolor: \"white\"\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{ employee.firstName } { employee.lastName }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<h4>{ employee.department } | { employee.position }</h4>\n\t\t\t\t\t\t<Badge color=\"danger\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tfontSize: \"20px\",\n\t\t\t\t\t\t\t\tbackground: this.getGraphColor(experienceScore),\n\t\t\t\t\t\t\t\tcolor: \"#212529\",\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t{ experienceScore.toFixed(1) }%\n\t\t\t\t\t\t</Badge>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<br />\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Alert color=\"dark\">\n\t\t\t\t\t\t\t<i className={ analysisIcon } style={{ color: analysisColor }} />\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\tOur data analysis indicates that <strong>{ employee.firstName }\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t{ employee.lastName }</strong>'s employee experience score\n\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t{ analysisMessage }\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<GraphWidget\n\t\t\t\t\t\t\ttitle=\"Employee Experience\"\n\t\t\t\t\t\t\tchartType=\"horizontalBar\"\n\t\t\t\t\t\t\toptions={ options }\n\t\t\t\t\t\t\tdata={ this.createEmployeeExperienceData() }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardTitle tag=\"h3\">\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\tEmployee Experience Details\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col md={ 2 } className=\"text-right\">\n\t\t\t\t\t\t\t\t\t\t\t<Badge color=\"danger\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"20px\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: this.getGraphColor(experienceScore),\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: \"#212529\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t{ experienceScore.toFixed(1) }%\n\t\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t{ this.buildTabs() }\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t\t<CardFooter className=\"text-muted\">\n\t\t\t\t\t\t\t\t<i className=\"fas fa-info-circle\" />\n\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\tWorkers with scores in the top quartile are more likely to report high levels of\n\t\t\t\t\t\t\t\twork performance that those whose scores are in the bottom quartile.\n\t\t\t\t\t\t\t</CardFooter>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardHeader>\n\t\t\t\t\t\t\t\t<CardTitle tag=\"h3\">\n\t\t\t\t\t\t\t\t\tOutcomes\n\t\t\t\t\t\t\t\t</CardTitle>\n\t\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<Table responsive>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td><i style={{ color: workPerformanceColor }} className={ workPerformanceIcon} /></td>\n\t\t\t\t\t\t\t\t\t\t\t<td><strong>Work Performance</strong></td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\tEmployees with scores in the top quartile are more likely to report\n\t\t\t\t\t\t\t\t\t\t\t\thigh levels of work performance than those whose scores are in the\n\t\t\t\t\t\t\t\t\t\t\t\tbottom quartile\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t{/* ))} */}\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td><i style={{ color: discretionaryColor }} className={ discretionaryIcon } /></td>\n\t\t\t\t\t\t\t\t\t\t\t<td><strong>Discretionary Effort</strong></td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\tEmployees with more positive experiences at work are much more likely\n\t\t\t\t\t\t\t\t\t\t\t\tto report significantly higher levels of discretionary effort.\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td><i style={{ color: retentionColor }} className={ retentionIcon } /></td>\n\t\t\t\t\t\t\t\t\t\t\t<td><strong>Retention</strong></td>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\tAnalysis reveals that employees with lower scores are more than twice\n\t\t\t\t\t\t\t\t\t\t\t\tas likely to say they want to lev compared to those with more positive\n\t\t\t\t\t\t\t\t\t\t\t\texperiences.\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t<CardFooter className=\"text-muted\">\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-info-circle\" />\n\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\tThe employee experience index score is calculated based on a study done by IBM.\n\t\t\t\t\t\t\t\t</CardFooter>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</>\n\t\t);\n\t}\n}\n\n/**\n * Employee Experience is the average of the 5 other points\n * Employee Experience compared to the outcomes\n * Each outcome could be a link for more details\n * Use a bar graph to\n */\n\n// _id: '{{objectId()}}',\n// index: '{{index()}}',\n// guid: '{{guid()}}',\n// firstName: '{{firstName()}}',\n// lastName: '{{surname()}}',\n// picture: 'http://placehold.it/64x64',\n// age: '{{integer(20, 50)}}',\n// gender: '{{gender()}}',\n// about: '{{lorem(1, \"paragraphs\")}}',\n// salary: '{{floating(40000, 120000, 2, \"$0,0.00\")}}',\n// department: '{{random(\"R&D\", \"Sales\", \"Marketing\", \"HR\", \"Finance\", \"IT\")}}',\n// retentionScore: '{{floating(50, 99)}}',\n// email: '{{email()}}',\n// phone: '+1 {{phone()}}',\n// address:\n\nexport default withRouter(EmployeeDetails);\n// export default EmployeeDetails;","// import classNames from \"classnames\";\nimport React from \"react\";\nimport {\n\tDropdownToggle,\n\tDropdownMenu,\n\tDropdownItem,\n\tUncontrolledDropdown,\n\tNavLink,\n\tNav,\n} from \"reactstrap\";\n\nclass Header extends React.PureComponent {\n\n\trender() {\n\t\treturn (\n\t\t\t<Nav className=\"ml-auto\" navbar>\n\t\t\t\t<UncontrolledDropdown nav>\n\t\t\t\t\t<DropdownToggle\n\t\t\t\t\t\tcaret\n\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\tdata-toggle=\"dropdown\"\n\t\t\t\t\t\tnav\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"notification d-none d-lg-block d-xl-block\" />\n\t\t\t\t\t\t<i className=\"tim-icons icon-sound-wave\" />\n\t\t\t\t\t\t<p className=\"d-lg-none\">Notifications</p>\n\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t<DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n\t\t\t\t\t\t<NavLink tag=\"li\">\n\t\t\t\t\t\t\t<DropdownItem className=\"nav-item\">\n\t\t\t\t\t\t\t\tNo new messages (This is the new class)\n\t\t\t\t\t\t\t</DropdownItem>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t</UncontrolledDropdown>\n\t\t\t\t<UncontrolledDropdown nav>\n\t\t\t\t\t<DropdownToggle\n\t\t\t\t\t\tcaret\n\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\tdata-toggle=\"dropdown\"\n\t\t\t\t\t\tnav\n\t\t\t\t\t\tonClick={ (e) => e.preventDefault() }\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<i className=\"fas fa-user-ninja\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<b className=\"caret d-none d-lg-block d-xl-block\" />\n\t\t\t\t\t\t<p className=\"d-lg-none\">Log Out</p>\n\t\t\t\t\t</DropdownToggle>\n\t\t\t\t\t<DropdownMenu className=\"dropdown-navbar\" right tag=\"ul\">\n\t\t\t\t\t\t<NavLink tag=\"li\">\n\t\t\t\t\t\t\t<DropdownItem className=\"nav-item\">Settings (TODO: new class)</DropdownItem>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<DropdownItem divider tag=\"li\" />\n\t\t\t\t\t\t<NavLink tag=\"li\">\n\t\t\t\t\t\t\t<DropdownItem className=\"nav-item\">Log out (TODO: new class)</DropdownItem>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</DropdownMenu>\n\t\t\t\t</UncontrolledDropdown>\n\t\t\t\t<li className=\"separator d-lg-none\" />\n\t\t\t</Nav>\n\t\t);\n\t}\n\n}\n\nexport default Header;\n","// import axios from \"axios\";\nimport { BasePage, showErrorNotice } from \"8bit-ghost-ui\";\nimport React from \"react\";\nimport { Alert } from \"reactstrap\";\n\nimport Header from \"./Header\";\n\nclass ProelioPage extends React.Component {\n\n\t// constructor(props) {\n\t// \tsuper(props);\n\t// \tthis.state = {\n\t// \t\tenvironment: process.env.NODE_ENV,\n\t// \t};\n\t// }\n\n\t/**\n\t * Once the component loads verify that this web app can communicate with the API configured\n\t */\n\t// componentDidMount() {\n\t// \tconst url = \"/api/status\";\n\t// \taxios.get(url)\n\t// \t\t.then()\n\t// \t\t.catch(() => {\n\t// \t\t\tshowErrorNotice(\"Iris service is unreachable.\");\n\t// \t\t});\n\t// }\n\n\trender() {\n\t\t// const { environment } = this.state;\n\t\t// const apiUrl = process.env.REACT_APP_IRIS_API_URL;\n\t\t// const appEnvironment = process.env.REACT_APP_ENVIRONMENT;\n\t\t// const bannerStyle = {\n\t\t// \tposition: \"fixed\",\n\t\t// \tright: \"15px\",\n\t\t// \tbottom: \"15px\",\n\t\t// \tmargin: 0,\n\t\t// \tpadding: 0,\n\t\t// \tzIndex: 1,\n\t\t// \tfontSize: \"12px\",\n\t\t// };\n\t\treturn (\n\t\t\t<BasePage\n\t\t\t\tactiveColor=\"green\"\n\t\t\t\tsidebarLogo={{\n\t\t\t\t\tinnerLink: \"/\",\n\t\t\t\t\ttext: \"Monkey Software\",\n\t\t\t\t\timgSrc: \"fas fa-atom fa-2x\",\n\t\t\t\t\tlogoType: \"icon\",\n\t\t\t\t}}\n\t\t\t\troutes={ this.props.routes }\n\t\t\t\trenderNavbar={ () => <Header /> }\n\t\t\t>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t{/* TODO: use React.children */}\n\t\t\t\t\t{ this.props.children }\n\t\t\t\t\t{/* { environment !== \"production\" && (\n\t\t\t\t\t\t<div id=\"environment-banner\" style={ bannerStyle }>\n\t\t\t\t\t\t\t<Alert color=\"default\">\n\t\t\t\t\t\t\t\t<strong>API:</strong>\n\t\t\t\t\t\t\t\t{ apiUrl }\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<strong>Environment: </strong>\n\t\t\t\t\t\t\t\t{ appEnvironment }\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)} */}\n\t\t\t\t</div>\n\t\t\t</BasePage>\n\t\t);\n\t}\n\n}\n\nexport default ProelioPage;\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\n// import axios from \"axios\";\n// import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\n// import Config from \"./configuration\";\n// import Health from \"./health\";\n// import Hosts from \"./entities/Hosts\";\n// import { ProelioPage } from \"./common\";\n// import SearchPage from \"./search\";\n// import Users from \"./entities/Users\";\n// import Welcome from \"./common/Welcome\";\n// import EntityDetails from \"./entities/EntityDetails\";\nimport Dashboard from './dashboard/Dashboard';\nimport EmployeeDirectory from \"./employees/EmployeeDirectory\";\n// import EmployeeDetails from \"./employees/EmployeeDetails\";\nimport EmployeeDetails from './employees/EmployeeDetails';\nimport ProelioPage from './common/ProelioPage';\n// import NotFound from \"./common/NotFound\";\n\nclass App extends React.Component {\n\n\t/**\n\t * This method is responsible for building out route components for all the\n\t * routes defined in the system, including nested routes.\n\t * @param {*} routes\n\t */\n\tstatic getRoutes(routes) {\n\t\treturn routes.map((route, key) => (\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath={ route.path }\n\t\t\t\tcomponent={ route.component }\n\t\t\t\tkey={ key }\n\t\t\t/>\n\t\t));\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst sideNavRoutes = [\n\t\t\t{\n\t\t\t\tname: \"Dashboard\",\n\t\t\t\ticon: \"fas fa-tachometer-alt\",\n\t\t\t\tpath: \"/\",\n\t\t\t\tcomponent: Dashboard,\n\t\t\t\tlayout: \"\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Employee Directory\",\n\t\t\t\ticon: \"fas fa-user\",\n\t\t\t\tpath: \"/employees\",\n\t\t\t\tcomponent: EmployeeDirectory,\n\t\t\t\tlayout: \"\",\n\t\t\t},\n\t\t];\n\t\tconst hiddenRoutes = [\n\t\t\t{\n\t\t\t\t// name: \"Employee Directory\",\n\t\t\t\t// icon: \"fas fa-user\",\n\t\t\t\tpath: \"/employee/:id\",\n\t\t\t\tcomponent: EmployeeDetails,\n\t\t\t\tlayout: \"\",\n\t\t\t},\n\t\t];\n\t\tthis.state = {\n\t\t\tsideNavRoutes,\n\t\t\thiddenRoutes,\n\t\t};\n\t}\n\n\trender() {\n\t\tconst { sideNavRoutes, hiddenRoutes } = this.state;\n\t\treturn (\n\t\t\t<ProelioPage routes={ sideNavRoutes }>\n\t\t\t\t<Switch>\n\t\t\t\t\t{ App.getRoutes(sideNavRoutes) }\n\t\t\t\t\t{ App.getRoutes(hiddenRoutes) }\n\t\t\t\t\t{/* <Route path=\"*\" component={ Dashboard } /> */}\n\t\t\t\t</Switch>\n\t\t\t</ProelioPage>\n\t\t);\n\t}\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<HashRouter>\n\t\t<App />\n\t</HashRouter>,\n\tdocument.getElementById(\"root\"),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}